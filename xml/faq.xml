<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../xsl/page.xsl"?>
<!--
  ronin.rubyforge.org.

  Copyright (c) 2006-2009 Hal Brodigan (postmodern.mod3 at gmail.com)

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->

<rubyforge xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Frequenty Asked Questions</title>
  <stylesheet src="css/faq.js" />
  <javascript src="scripts/jquery-1.2.6.min.js" />
  <javascript src="scripts/faq.js" />

  <page>
    <xi:include href="_menu.xml" />

    <content>
      <section label="faq" title="Frequently Asked Questions">
        <subsection label="what" title="What is Ronin">
          <faq>
            <item>
              <question>Is Ronin a Framework?</question>

              <answer>
                <p>
                  Ronin is not exactly a framework. Ronin consists of
                  a Ruby Hacking Environment and a Platform for Publishing
                  Code/Exploits/Payloads/etc.
                </p>

                <p>
                  Besides, "framework" is totally a web2.0 buzz-word from
                  the 2000s.
                </p>
              </answer>
            </item>

            <item>
              <question>What is Ronin licensed under?</question>

              <answer>
                <p><a href="http://www.gnu.org/copyleft/gpl.html">GPL-2</a></p>
              </answer>
            </item>

            <item>
              <question>How well documented is Ronin?</question>

              <answer>
                <p>
                  Ronin has extensive <a href="http://yard.soen.ca/">YARD</a>
                  documentation of it's <a href="/resources/#api">API</a>.
                  Various Tutorials and
                  <a href="/resources/#howtos">HOWTOs</a> are always in the
                  works.
                </p>
              </answer>
            </item>

            <item>
              <question>How readable is Ronin's code-base?</question>

              <answer>
                <p>
                  Other projects have been criticized for having poor
                  programming conventions or a lack of documentation. To
                  avoid this, Ronin enforces a set of coding
                  <a href="/development/style.html">style guidelines</a> to
                  ensure that all source-code is clean and readable.
                </p>
              </answer>
            </item>

            <item>
              <question>
                Does Ronin have a test-suite so that I can ensure that
                Ronin is bug free?
              </question>

              <answer>
                <p>
                  Yes, Ronin comes with extensive
                  <a href="http://rspec.info/">RSpec</a> specification
                  tests.
                </p>
              </answer>
            </item>

            <item>
              <question>
                I don't know a lot of Ruby, is there a command-line
                interface to the various libraries of Ronin?
              </question>

              <answer>
                <p>
                  Why yes. Ronin's design allows for the libraries of Ronin
                  to add various sub-commands to the main <kbd>ronin</kbd>
                  command. To view all available commands simply run the
                  following command:
                </p>
                <shell>$ ronin help</shell>

                <p>To view help information on a specific command:</p>
                <shell>$ ronin help command_here</shell>
              </answer>
            </item>

            <item>
              <question>Does Ronin have a GUI or Web-interface?</question>

              <answer>
                <p>
                  Not currently. The developers of Ronin are considering
                  creating a GUI using <a href="http://jruby.codehaus.org/">JRuby</a> +
                  Swing or possibly <a href="http://code.whytheluckystiff.net/shoes/">Shoes</a>.
                  A Web-interface is also being considered, possibly using
                  <a href="http://merbivore.com/">Merb</a> or
                  <a href="http://sinatrarb.com/">Sinatra</a>.
                </p>
              </answer>
            </item>

            <item>
              <question>Is Ronin compatible with Ruby 1.9?</question>

              <answer>
                <p>
                  Why yes it is! As of Ronin 0.2.3 and above, all spec
                  tests pass on Ruby 1.9.1-p0.
                </p>

                <p>
                  Ofcourse there still might be bugs which the spec tests
                  did not uncover. We encourage users to test their
                  favorite Ruby projects against Ruby 1.9 and submit
                  bug-reports/patches accordingly.
                </p>
              </answer>
            </item>
          </faq>
        </subsection>

        <subsection label="platform" title="Ronin Platform">
          <faq>
            <item>
              <question>What is this Ronin Platform?</question>

              <answer>
                <p>
                  The Platform simply manages Overlays and their contents,
                  allowing users to install, update and remove Overlays.
                </p>
              </answer>
            </item>

            <item>
              <question>What exactly are Overlays?</question>

              <answer>
                <p>
                  Overlays are directories which can contain Objects (such
                  as Exploits or Payloads) or Extensions (small groupings of
                  code) that can be used within Ronin. An Overlay also contains
                  a small XML file named <tt>ronin.xml</tt> that describes the
                  Overlay, it's authors and it's licensing.
                </p>
              </answer>
            </item>

            <item>
              <question>How are Overlays hosted?</question>

              <answer>
                <p>
                  An Overlay can be hosed on any
                  <a href="http://subversion.tigris.org/">Subversion (SVN)</a>,
                  <a href="http://www.selenic.com/mercurial/wiki/">Mercurial (Hg)</a>,
                  <a href="http://git.or.cz/">Git</a> or
                  <a href="http://samba.anu.edu.au/rsync/">Rsync</a> server.</p>
              </answer>
            </item>

            <item>
              <question>How can I install an Overlay?</question>

              <answer>
                <p>
                  Simply pass the URL of the Overlay to the
                  <kbd>ronin</kbd> <kbd>install</kbd> sub-command.
                </p>
                <shell>$ ronin install svn://www.example.com/overlay</shell>

                <p>
                  If you have previously checked out an Overlay, then
                  simply pass the path of the local Overlay to the
                  <kbd>ronin</kbd> <kbd>add</kbd> sub-command.
                </p>
                <shell>$ ronin add path/to/local/overlay</shell>
              </answer>
            </item>

            <item>
              <question>How can I generate a skeleton Overlay?</question>

              <answer>
                <p>
                  You can generate a skeleton Overlay by simply running
                  the following command provided by the
                  <a href="/gen/">Ronin Gen</a> library:
                </p>

                <shell>$ ronin-gen overlay path/to/overlay/name</shell>

                <p>
                  Or if you wish to specify additional Overlay metadata:
                </p>
                <shell>$ ronin-gen overlay -n Overlay-Name -L GPL-2 \
-m "Author &lt;email&gt;" \
-S http://svn.mysite.com/overlay \
-U http://myblog.com \
-D "This is my Overlay, enjoy." \
path/to/overlay</shell>
              </answer>
            </item>
          </faq>
        </subsection>

        <subsection label="hacking" title="Hacking">
          <faq>
            <item>
              <question>
                Ronin comes with code which can be used to scan for and
                exploit security vulnerabilities, aren't you making
                everyone less secure by doing so?
              </question>

              <answer>
                <p>
                  Yeah, so? There are plenty of similar projects which are
                  freely available on-line, that can be used to scan and
                  exploit vulnerabilities.
                </p>
              </answer>
            </item>

            <item>
              <question>
                By publishing a hacking tool, aren't you helping support
                TERRORISM!!!1111oneoneone
              </question>

              <answer>
                <p>
                  Technically, we're helping everyone, since Ronin is
                  freely available to download. What people choose to do
                  with Ronin is their own ethical responsibility. If you
                  are scared of Hackers or TERRORISTS, we suggest you help
                  raise awareness of bad programming habits which helped
                  create all those vulnerabilities in the first place.
                  Perhaps you could stand outside Computer Science
                  departments holding up signs such as:
                </p>
                <quote>
                  <p>"Parametrize your SQL data"</p>
                </quote>

                <p>Or the classic:</p>
                <quote>
                  <p>"Don't use strcpy!"</p>
                </quote>
              </answer>
            </item>

            <item>
              <question>Does Ronin ship with 0day?</question>

              <answer>
                <p>
                  Ronin was never intended to ship with any built-in
                  exploits or payloads. Ronin's design allows user to
                  checkout various Overlays of exploits, payloads and
                  extensions. This design choice allows users to selectively
                  choose which Overlay they want to use, update them when
                  they like and even create their own.
                </p>
              </answer>
            </item>
          </faq>
        </subsection>

        <subsection label="metasploit" title="Metasploit">
          <faq>
            <item>
              <question>Isn't Ronin just another Metasploit?</question>

              <answer>
                <p>
                  In some ways Ronin is similiar to
                  <a href="http://www.metasploit.com/">Metasploit</a>.
                  They both use <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">Object Relational Mappers (ORMs)</a> to manage their
                  Databases. They both are focused on exploiting
                  vulnerabilities within code. They both have a console-like
                  interface. That's where the similarities end.
                </p>

                <p>
                  Ronin uses <a href="http://datamapper.org/">DataMapper</a>
                  to manage it's Database, while
                  <a href="http://www.metasploit.com/">Metasploit</a> uses
                  the less flexible
                  <a href="http://ar.rubyonrails.com/">ActiveRecord</a>.
                  Ronin also provides a succinct syntax for defining
                  exploits or payloads in Ruby. Ronin also provides an
                  Overlay system that allows one to distribute their code,
                  exploits, payloads and other data to other Ronin users
                  over any <a href="http://subversion.tigris.org/">SubVersion (SVN)</a>, <a href="http://www.selenic.com/mercurial/wiki/">Mercurial (Hg)</a>, <a href="http://git.or.cz/">Git</a> or <a href="http://samba.anu.edu.au/rsync/">Rsync</a>
                  repository. Ronin also provides plenty of convenience
                  methods, which makes working with data a little nicer.
                </p>
              </answer>
            </item>

            <item>
              <question>
                Why did you bother writing Ronin, but instead worked on
                Metasploit?
              </question>

              <answer>
                <p>
                  I wanted to explore different software design concepts and
                  architectural choices, other than the ones followed by
                  <a href="http://www.metasploit.com/">Metasploit</a>.
                  I also didn't prefer the coding style used within
                  Metasploit's code-base.
                </p>

                <p>
                  By starting from scratch with Ronin, I was able to freely
                  make radical decisions, such as hosting the code on
                  <a href="http://github.com">GitHub</a>, choosing to use
                  <a href="http://datamapper.org/">DataMapper</a>
                  to manage and update the Database or package
                  Ronin as separate RubyGems hosted on
                  <a href="http://rubyforge.org/projects/ronin">RubyForge</a>.
                  and <a href="http://gemcutter.org/search?query=ronin&commit=Search">GemCutter</a>.
                </p>
              </answer>
            </item>

            <item>
              <question>
                Could I use Ronin's convenience methods in Metasploit
              </question>

              <answer>
                <p>
                  Technically speaking, yes you could load Ronin's
                  convenience methods and use them within Metasploit
                  exploits. But Metasploit would still be unable
                  to make use of Ronin's Database, use any of Ronin's
                  objects, or access the Ronin Overlay cache. You would
                  have to manually load and access these things from
                  within Metasploit.
                </p>

                <note>
                  Legally speaking, since Ronin's code-base is licensed
                  under the GPL-2, any linking to Ronin's code-base (either
                  statically or dynamically at run-time) creates a derived
                  work that is considered to be covered by the GPL-2
                  license.
                </note>
              </answer>
            </item>
          </faq>
        </subsection>

        <subsection label="commercialization" title="Commercialization">
          <faq>
            <item>
              <question>
                Does Ronin offer certification or special training courses?
              </question>

              <answer>
                <p>
                  No, we're not that kind of project. Besides, you shouldn't
                  need a certificate to feel good about yourself.
                </p>
              </answer>
            </item>

            <item>
              <question>
                Can I use Ronin at my corporate INFOSEC job?
              </question>

              <answer>
                <p>
                  Even though Ronin is licensed under the GPL-2, there's
                  nothing stopping you from using it at work.
                </p>
                
                <p>
                  Although, we warn users of Ronin who are under
                  various contracts, that the work you do with
                  Ronin technically may not be yours, but owned by your
                  employeer.
                </p>
              </answer>
            </item>

            <item>
              <question>
                Can I use Ronin in my (companies) commercial product?
              </question>

              <answer>
                <p>
                  Probably not. Since Ronin is licensed under the GPL-2
                  license, any linking to Ronin's code-base (either
                  statically or dynamically at run-time) creates a derived
                  work which is considered to be covered by the GPL-2
                  license.
                </p>
              </answer>
            </item>

            <item>
              <question>
                But we are a struggling Information Security company, could
                we purchase the rights to Ronin?
              </question>

              <answer>
                <p>
                  Go struggle somewhere else. No one is selling Ronin, we
                  don't want to see it become another
                  <a href="http://en.wikipedia.org/wiki/Nessus_(software)">Nessus</a>.
                </p>
              </answer>
            </item>
          </faq>
        </subsection>
      </section>
    </content>
  </page>
</rubyforge>
